[{"/home/isa/Desktop/Codaisseur/TechTest/NPI/npi/src/index.js":"1","/home/isa/Desktop/Codaisseur/TechTest/NPI/npi/src/App.js":"2","/home/isa/Desktop/Codaisseur/TechTest/NPI/npi/src/reportWebVitals.js":"3","/home/isa/Desktop/Codaisseur/TechTest/NPI/npi/src/store.js":"4","/home/isa/Desktop/Codaisseur/TechTest/NPI/npi/src/reducers/index.js":"5","/home/isa/Desktop/Codaisseur/TechTest/NPI/npi/src/reducers/exe1Reducer.js":"6","/home/isa/Desktop/Codaisseur/TechTest/NPI/npi/src/actions/exe1Action.js":"7","/home/isa/Desktop/Codaisseur/TechTest/NPI/npi/src/components/Exersize1.js":"8","/home/isa/Desktop/Codaisseur/TechTest/NPI/npi/src/components/Exersize2.js":"9","/home/isa/Desktop/Codaisseur/TechTest/NPI/npi/src/components/LineHighChart.js":"10","/home/isa/Desktop/Codaisseur/TechTest/NPI/npi/src/components/MapBowHead.js":"11","/home/isa/Desktop/Codaisseur/TechTest/NPI/npi/src/D3_Html_Charts/rawdata.js":"12"},{"size":241,"mtime":1607179467073,"results":"13","hashOfConfig":"14"},{"size":920,"mtime":1608843331796,"results":"15","hashOfConfig":"14"},{"size":362,"mtime":1607177775283,"results":"16","hashOfConfig":"14"},{"size":352,"mtime":1607178869874,"results":"17","hashOfConfig":"14"},{"size":135,"mtime":1607240653554,"results":"18","hashOfConfig":"14"},{"size":280,"mtime":1607246801172,"results":"19","hashOfConfig":"14"},{"size":455,"mtime":1608839290676,"results":"20","hashOfConfig":"14"},{"size":3588,"mtime":1608839147036,"results":"21","hashOfConfig":"14"},{"size":1930,"mtime":1608838920132,"results":"22","hashOfConfig":"14"},{"size":3530,"mtime":1608909551831,"results":"23","hashOfConfig":"14"},{"size":3853,"mtime":1608843656188,"results":"24","hashOfConfig":"14"},{"size":1742635,"mtime":1608808613596,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"mh2lft",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"28"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"/home/isa/Desktop/Codaisseur/TechTest/NPI/npi/src/index.js",[],["53","54"],"/home/isa/Desktop/Codaisseur/TechTest/NPI/npi/src/App.js",[],"/home/isa/Desktop/Codaisseur/TechTest/NPI/npi/src/reportWebVitals.js",[],["55","56"],"/home/isa/Desktop/Codaisseur/TechTest/NPI/npi/src/store.js",[],"/home/isa/Desktop/Codaisseur/TechTest/NPI/npi/src/reducers/index.js",[],"/home/isa/Desktop/Codaisseur/TechTest/NPI/npi/src/reducers/exe1Reducer.js",[],"/home/isa/Desktop/Codaisseur/TechTest/NPI/npi/src/actions/exe1Action.js",[],"/home/isa/Desktop/Codaisseur/TechTest/NPI/npi/src/components/Exersize1.js",[],"/home/isa/Desktop/Codaisseur/TechTest/NPI/npi/src/components/Exersize2.js",[],"/home/isa/Desktop/Codaisseur/TechTest/NPI/npi/src/components/LineHighChart.js",[],"/home/isa/Desktop/Codaisseur/TechTest/NPI/npi/src/components/MapBowHead.js",["57","58"],"//Still needs: a legend, to use the quality and time property. Answer questions posed by researcher.\n//What goes wrong: one whale's path does not show up, and one whale apparently swam over land...?\n//Dreams: All the beautifull features that I see in my mind, but still have to learn ;).\n\nimport React, { Component } from \"react\";\nimport styled from \"styled-components\";\nimport L from \"leaflet\";\nimport { MapContainer, Marker, Popup, TileLayer, GeoJSON } from \"react-leaflet\";\nimport { BasemapLayer, FeatureLayer } from \"react-esri-leaflet\";\n\nimport { data } from \"../D3_Html_Charts/rawdata\";\nimport \"../App.css\";\n\nconst white = \"#FFFFFF\";\nconst grey = \"#B0A175\";\n\nconst BooleanButton = styled.div`\nall: unset;\nwidth: 25%;\nmargin-bottom: 3rem;\nmargin: auto;\npadding: 1rem;\ndisplay: flex;\njustify-content: center;\nalign-items: center;\nbackground-color: ${grey};\ntext-align: center;\nfont-size: 24px;\nfont-family: \"Times New Roman\";\ncolor: ${white};\nborder-radius: 4px;\ncursor: pointer;\n&:hover {\n  color: ${grey};\n  background-color: ${white};\n`;\n\nclass MapBowHead extends Component {\n  state = {\n    showList: false,\n  };\n\n  render() {\n    //create a geojson from json data\n    const uniqueWhales = (array) => {\n      const double = {};\n      const unique = [];\n      array.forEach((e) => {\n        if (!double[e.Ind]) {\n          double[e.Ind] = true;\n          unique.push(e.Ind);\n        }\n      });\n      return unique;\n    };\n\n    const whaleNames = uniqueWhales(data);\n\n    const allFeatures = whaleNames.map((n, i) => {\n      const whale = data.filter((w) => {\n        return w.Ind === n;\n      });\n\n      const coordinatesWhale = whale.map((w) => {\n        const coordinate = [w.Lon, w.Lat];\n        return coordinate;\n      });\n\n      const feature = {\n        type: \"Feature\",\n        id: n,\n        properties: {\n          name: n,\n          color: `rgb(${0 + i * 15}, ${0 + i * 15}, ${0 + i * 15})`,\n          weight: i,\n        },\n        geometry: {\n          type: \"LineString\",\n          coordinates: coordinatesWhale,\n        },\n      };\n      return feature;\n    });\n\n    const geoJSON = {\n      type: \"FeatureCollection\",\n      features: allFeatures,\n    };\n\n    //create position for markers\n    const position = [\n      geoJSON.features[0].geometry.coordinates[0][1],\n      geoJSON.features[0].geometry.coordinates[0][0],\n    ];\n\n    const positionsMarkers = geoJSON.features.map((f) => {\n      const c = [f.geometry.coordinates[0][1], f.geometry.coordinates[0][0]];\n      const n = f.properties.name;\n      const b = [c, n];\n      return b;\n    });\n\n    //create list of markers\n    const markers = positionsMarkers.map((p, i) => {\n      const icon = L.icon({\n        iconUrl: \"https://cdn2.webdamdb.com/1280_SMQqW23s1bNH.png?1509021505\",\n        iconSize: [120, 80],\n      });\n      return (\n        <Marker key={i} position={p[0]} icon={icon}>\n          <Popup>\n            <b>Hej! I am whale {p[1]}</b>\n          </Popup>\n        </Marker>\n      );\n    });\n\n    //logic for the Buttontext\n    const listButtonText = this.state.showList ? \"Hide\" : \"Bowhead Paths\";\n\n    //the big return statement\n    return (\n      <div>\n        <BooleanButton\n          onClick={() => {\n            this.setState({ showList: !this.state.showList });\n          }}\n        >\n          {listButtonText}\n        </BooleanButton>\n        {this.state.showList && (\n          <MapContainer center={position} zoom={5}>\n            <BasemapLayer name=\"DarkGray\" />\n\n            <GeoJSON\n              data={geoJSON}\n              style={(feature) => {\n                return {\n                  color: feature.properties.color,\n                  weight: feature.properties.weight,\n                };\n              }}\n            ></GeoJSON>\n            {markers}\n          </MapContainer>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default MapBowHead;\n","/home/isa/Desktop/Codaisseur/TechTest/NPI/npi/src/D3_Html_Charts/rawdata.js",[],{"ruleId":"59","replacedBy":"60"},{"ruleId":"61","replacedBy":"62"},{"ruleId":"59","replacedBy":"63"},{"ruleId":"61","replacedBy":"64"},{"ruleId":"65","severity":1,"message":"66","line":8,"column":39,"nodeType":"67","messageId":"68","endLine":8,"endColumn":48},{"ruleId":"65","severity":1,"message":"69","line":9,"column":24,"nodeType":"67","messageId":"68","endLine":9,"endColumn":36},"no-native-reassign",["70"],"no-negated-in-lhs",["71"],["70"],["71"],"no-unused-vars","'TileLayer' is defined but never used.","Identifier","unusedVar","'FeatureLayer' is defined but never used.","no-global-assign","no-unsafe-negation"]